[tool.poetry]
name = "api-server"
version = "0.1.0"
description = "API server container"
authors = ["Zhong Houji"]
readme = "README.md"
packages = [{include = "location"}]

[tool.poetry.dependencies]
python = ">=3.8.16,<3.11"
python-dotenv = "^1.0.0"
mysql-connector-python = "^8.0.32"
flask = "^2.3.3"

[tool.poetry.group.dev.dependencies]
pyproject-flake8 = "^6.0.0.post1"
black = "^22.12.0"
mypy = "^0.991"
isort = "^5.12.0"
flake8-docstrings = "^1.7.0"
taskipy = "^1.10.3"
pytest = "^7.2.1"
pytest-html = "^3.2.0"
sphinx = "^6.1.3"
sphinx-rtd-theme = "^1.2.0"
cerberus = "^1.3.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
extend-ignore = "E203, E266, E501, W503, W504, F403, F401, D104, D100, D101, D102, D107 D202, D205, D400, D401, D403, D412, D414"
max-line-length = 79
docstring-convention = 'google'
exclude = ["tests", "libs", "**/*_pb2.py"]

[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
(
  (
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | venv
    | \.idea
    | \.vscode
    | _build
    | buck-out
    | build
    | dist
    | schema
    | tests
    | libs
  )/
  | .*_pb2.py
)
'''

[tool.mypy]
python_version = "3.10"
no_strict_optional = true
ignore_missing_imports = true
check_untyped_defs = true
show_error_context = true
exclude = '''
(
  (
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | venv
    | \.idea
    | \.vscode
    | _build
    | buck-out
    | build
    | dist
    | schema
    | tests
    | libs
  )/
  | .*_pb2.py
)
'''

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
include_trailing_comma = true
known_local_folder=['config',]
skip_glob = "*/libs/*,/tests/*.py,**/*_pb2.py"

[tool.taskipy.tasks]
black = "black ${file_name}"
isort = "isort ${file_path}"
fmt-all = "task black . && task isort ."
fmt = "black ${file_name} && isort ${file_path}"
flake8 = "pflake8 ${file_name}"
mypy = "mypy ${file_name}"
lint = "pflake8 ${file_name} && mypy ${file_name}"
lint-all = "task flake8 . && task mypy ."
lint-black = "black --check ${file_name}"
run = "python ${file_path}"
test = "pytest . --html=tests/docs/pytest_results.html"
docs = "sphinx-apidoc -f -o ./docs/source/docstring ./location/ && sphinx-build -b html ./docs/source ./docs/build"
