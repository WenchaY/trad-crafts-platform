version: "3"

volumes:
  phpmyadmin-static:

networks:
  docker-network:

services:
  #
  # Mysql DB
  #
  mysql:
    image: mysql
    volumes:
      - ./docker/mysql/sql:/docker-entrypoint-initdb.d # 初期データ
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf # 設定ファイル
      - ./docker/mysql/data:/var/lib/mysql # 保存データ
    networks:
      - docker-network
    environment:
      TZ: ${COMMON_TIMEZONE:-Asia/Tokyo}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    env_file:
      - .env.compose
    ports:
      - 3306:3306

  #
  # DB管理ツール
  #
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    networks:
      - docker-network
    environment:
      TZ: ${COMMON_TIMEZONE:-Asia/Tokyo}
      PMA_ARBITRARY: ${DB_ARBITRARY:-1}
      PMA_HOST: ${DB_HOST:-mysql}
      PMA_PORT: ${DB_PORT:-3306}
      PMA_USER: ${DB_USER:-root}
      PMA_PASSWORD: ${DB_PASSWORD:-root}
    env_file:
      - .env.compose
    depends_on:
      - mysql
    ports:
      - 8080:80

  #
  # APIサーバー
  #
  api-server:
    build:
      context: .
      dockerfile: ./Docker/api-server/Dockerfile
    restart: always
    volumes:
      - ${PROJECT_API_SERVER_DIR:-./api-server}:/api-server
    networks:
      - docker-network
    tty: true
    environment:
      TZ: ${COMMON_TIMEZONE:-Asia/Tokyo}
    env_file:
      - .env.compose
    depends_on:
      - mysql
    ports:
      - 3000:3000

  #
  # Web Application
  #
  # 予備
  # web-app:
  #   build: 
  #     context: .
  #     dockerfile: ./Docker/web-app/Dockerfile
  #   volumes:
  #     - ${PROJECT_WEB_APP_DIR:-./web-app}:/web-app
  #   stdin_open: true
  #   networks:
  #     - docker-network
  #   environment:
  #     TZ: ${COMMON_TIMEZONE:-Asia/Tokyo}
  #   env_file:
  #     - .env.compose
  #   command: sh -c 'npm i && npm run docker'
  #   depends_on:
  #     - api-server
    # ports:
    #   - 80:80